#!bash
# shellcheck disable=SC1090
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

case $- in
*i*) ;; # interactive
*) return ;; 
esac

# If not running interactively, don't do anything
[ -z "$PS1" ] && return



# ----------------------- environment variables ----------------------
#                           (also see envx)

export HRULEWIDTH=73
export EDITOR=vi
export VISUAL=vi
export EDITOR_PREFIX=vi


export LESS_TERMCAP_mb="[35m" # magenta
export LESS_TERMCAP_md="[33m" # yellow
export LESS_TERMCAP_me="" # "0m"
export LESS_TERMCAP_se="" # "0m"
export LESS_TERMCAP_so="[34m" # blue
export LESS_TERMCAP_ue="" # "0m"
export LESS_TERMCAP_us="[4m"  # underline


# ------------------------ bash shell options ------------------------

shopt -s checkwinsize
shopt -s expand_aliases
shopt -s globstar
shopt -s dotglob
shopt -s extglob

# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTSIZE=5000
export HISTFILESIZE=10000

set -o vi


# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

# export PS1='\[\033[33m\][\t]\[\033[00m\] \[\033[32m\]\w$\[\033[00m\] '
# --------------------------- smart prompt ---------------------------
#                 (keeping in bashrc for portability)

PROMPT_LONG=20
PROMPT_MAX=95
PROMPT_AT=@

__ps1() {
	  local P='$' dir="${PWD##*/}" B countme short long double\
	      r='\[\e[31m\]' g='\[\e[30m\]' h='\[\e[34m\]' \
	      u='\[\e[33m\]' p='\[\e[34m\]' w='\[\e[35m\]' \
	      b='\[\e[36m\]' x='\[\e[0m\]'

	    [[ $EUID == 0 ]] && P='#' && u=$r && p=$u # root
	    [[ $PWD = / ]] && dir=/
	    [[ $PWD = "$HOME" ]] && dir='~'

	    B=$(git branch --show-current 2>/dev/null)
	    [[ $dir = "$B" ]] && B=.
	    countme="$USER$PROMPT_AT$(hostname):$dir($B)\$ "

	    [[ $B = master || $B = main ]] && b="$r"
	    [[ -n "$B" ]] && B="$g($b$B$g)"

	    short="$u\u$g$PROMPT_AT$h\h$g:$w$dir$B$p$P$x "
	    long="$g╔ $u\u$g$PROMPT_AT$h\h$g:$w$dir$B\n$g╚ $p$P$x "
	    double="$g╔ $u\u$g$PROMPT_AT$h\h$g:$w$dir\n$g║ $B\n$g╚ $p$P$x "

	    if (( ${#countme} > PROMPT_MAX )); then
	      PS1="$double"
	    elif (( ${#countme} > PROMPT_LONG )); then
	      PS1="$long"
	    else
	      PS1="$short"
	    fi
}

PROMPT_COMMAND="__ps1"

unset color_prompt force_color_prompt

# ------------------------------ aliases -----------------------------
#      (use exec scripts instead, which work from vim and subprocs)


alias l='ls'
alias la='ls -a'
alias ls='ls --color=auto'
alias ll='ls -lah'
alias tree='tree -Csuh'


alias cdcode='cd C:\\Users\\atkum\\Code'
alias cdkb='cd C:\\Users\\atkum\\Code\\KnowledgeBase'
alias cdzet='cd C:\\Users\\atkum\\Code\\KnowledgeBase\\notes\\zettelkasten'
alias cdnotes='cd C:\\Users\\atkum\\Code\\KnowledgeBase\\notes'

alias cdlib='cd C:\\Users\\atkum\\Documents\\BooksLibrary'

alias lynx='lynx -accept_all_cookies'

alias diff='diff --color'

alias clear='printf "\e[H\e[2J"'
alias cl='printf "\e[H\e[2J"'
alias c='printf "\e[H\e[2J"'


alias subl='C:\\Program\ Files\\Sublime\ Text\\subl.exe'
alias npp='C:\\Program\ Files\ \(x86\)\\Notepad++\\notepad++.exe'


